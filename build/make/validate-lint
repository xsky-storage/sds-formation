#!/bin/bash
set -e

packages=(${SRC_DIRS[@]})

if [ ! -e ./golint ]; then
    go build -o ./golint golang.org/x/lint/golint
fi

lint() {
	if [[ -z $1 ]]; then
		return
	fi
	failedLint=$(./golint $1 2>&1)
	if [ "$failedLint" ]; then
		errors+=( "$failedLint" )
	fi
}

set +e
errors=()
for p in "${packages[@]}"; do
	# Run golint on package/*.go file explicitly to validate all go files
	# and not just the ones for the current platform.
	srcs=$(ls "$p"/*.go | grep -v _test.go)
	inner_tests=$(ls "$p"/*.go | grep _inner_test.go)
	if [[ -n $inner_tests ]]; then
		srcs+=`printf "\n$inner_tests"`
	fi
	tests=$(ls "$p"/*.go | grep _test.go | grep -v inner_test.go)
	lint "$srcs"
	lint "$tests"
done
set -e

if [ ${#errors[@]} -eq 0 ]; then
	echo 'Congratulations!  All Go source files have been linted.'
else
	{
		echo "Errors from golint:"
		for err in "${errors[@]}"; do
			echo "$err"
		done
		echo
		echo 'Please fix the above errors. You can test via "golint" and commit the result.'
		echo
	} >&2
	exit 1
	false
fi
